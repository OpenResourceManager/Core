swagger: "2.0"
schemes:
  - "https"
  - "http"
consumes:
  - "text/plain; charset=utf-8"
produces:
  - "application/json"
securityDefinitions:
  jwt_bearer:
    type: apiKey
    name: Authorization
    in: header
    description: 'JWT Authorization header. Header should be in the following format:   [Authorization: "Bearer 7fqiofi813ur9eh1f789ehqnpc8r4..."]'
    authorizationUrl: '/auth/login'
info:
  version: 1.0.0
  title: SLERP Core API
  description: An API that houses ERP data, allowing open development around institutional data.
  contact:
    name: Alex Markessinis
    url: https://github.com/MelonSmasher
    email: markea125@gmail.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
basePath: '/api/v1'
responses:
  202_Verification:
    description: Accepted
    examples:
      'Email':
        'data':
          'id': 78
          'account_id': 68
          'address': "pwillms@huels.com"
          'verified': true
          'verification_token': null
          'created': "2016-11-09 - 21:23:44"
          'updated': "2016-11-11 - 14:54:45"
      'Mobile Phone':
        'data':
          'id': 6
          'account_id': 114
          'number': "1706263613"
          'country_code': "1"
          'verified': true
          'verification_token': null
          'created': "2016-11-09 - 21:23:44"
          'updated': "2016-11-11 - 14:54:45"
          'mobile_carrier':
            "id": 12
            "label": "Republic Wireless"
            "code": "RBW"
            "created": "2016-11-09 - 21:22:53"
            "updated": "2016-11-09 - 21:22:53"
  404_Verification:
    description: Not Found
    examples:
      'Token Not Found':
        'message': "Token Not Found"
        'status_code': 404
  401:
    description: 'Unauthorized'
    examples:
      'General':
        message: "401 Unauthorized"
        status_code: 401
      'Token Expired':
        message: "Token has expired"
        status_code: 401
      'Invalid Token':
        message: "Could not decode token: The token \"7fqiofi813ur9eh1f789ehqnpc8r4...\" is an invalid JWS"
        status_code: 401
    schema:
      $ref: '#/definitions/error'


paths:


  '/auth/login':
    post:
      summary: Route used to authenticate an API client. API consumer credentials are supplied in POST body. JWT token is returned to the client. The token supplied should be sent with subsequent requests to the API in the `Authorization` header.
      description: Authenticate credentials with API.
      parameters:
        - name: credentials
          in: body
          required: true
          description: API consumer's credentials.
          type: string
          schema:
            $ref: '#/definitions/credentials'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/token'
          examples:
            'application/json':
              token: '7fqiofi813ur9eh1f789ehqnpc8r4...'
        401:
          description: 'Unauthorized'
          examples:
            'General':
              message: "401 Unauthorized"
              status_code: 401
          schema:
                $ref: '#/definitions/error'


  '/auth/validate':
    get:
      summary:
      operationId:
      parameters:
        -
          name: Authorization
          in: header
          required: true
          schema:
             $ref: '#/definitions/Authorization'
      responses:
        202:
          description: Accepted
          schema:
            type: object
            properties:
                user:
                  type: string
                message:
                  type: string
                status_code:
                  type: integer
          examples:
            'application/json':
              user: 'admin'
              message: "success"
              success: 202
        401:
          $ref: '#/responses/401'


  '/verify':
    post:
      summary: "Verify email or mobile phone verification token. The token is a unique code sent to the email or mobile phone which should then be sent to this API to mark that email address or mobile phone as verified."
      description: "Send verification token as parameter within a post request."
      parameters:
        -
          name: token
          in: formData
          type: string
          required: true
      responses:
        202:
          $ref: '#/responses/202_Verification'
        404:
          $ref: '#/responses/404_Verification'


  '/verify/{token}':
    get:
      summary: "Verify email or mobile phone verification token. The token is a unique code sent to the email or mobile phone which should then be sent to this API to mark that email address or mobile phone as verified."
      description: "Send verification token as url parameter within a get request."
      parameters:
        -
          name: token
          in: url
          type: string
          required: true
      responses:
        202:
          $ref: '#/responses/202_Verification'
        404:
          $ref: '#/responses/404_Verification'





definitions:
#############
  Account:
    type: object
    required:
      - identifier
      - username
      - name_first
      - name_last
      - primary_duty
    properties:
      identifier:
        type: string
      username:
        type: string
      name_prefix:
        type: string
      name_first:
        type: string
      name_middle:
        type: string
      name_last:
        type: string
      name_postfix:
        type: string
      name_phonetic:
        type: string
      primary_duty:
        type: integer
      ssn:
        type: string
      password:
        type: string
      birth_date:
        type: string
#############
  Address:
    type: object
    required:
      - account_id
      - addressee
      - line_1
      - city
      - state_id
      - zip
      - country_id
    properties:
      account_id:
        type: integer
      addressee:
        type: string
      organization:
        type: string
      line_1:
        type: string
      line_2:
        type: string
      city:
        type: string
      state_id:
        type: integer
      zip:
        type: string
      country_id:
        type: integer
      latitude:
        type: number
        format: float
      longitude:
        type: number
        format: float
#############
  Building:
    type: object
    required:
      - campus_id
      - code
      - label
    properties:
      campus_id:
        type: integer
      code:
        type: string
      label:
        type: string
#############
  Campus:
    type: object
    required:
      - code
      - label
    properties:
      code:
        type: string
      label:
        type: string
#############
  Country:
    type: object
    required:
      - code
      - label
      - abbreviation
    properties:
      code:
        type: string
      label:
        type: string
      abbreviation:
        type: string
#############
  Course:
    type: object
    required:
      - department_id
      - course_level
      - code
      - label
    properties:
      department_id:
        type: integer
      course_level:
        type: integer
      code:
        type: string
      label:
        type: string
#############
  Department:
    type: object
    required:
      - academic
      - code
      - label
    properties:
      academic:
        type: boolean
        format: int32
      code:
        type: string
      label:
        type: string
#############
  Duty:
    type: object
    required:
      - code
      - label
    properties:
      code:
        type: string
      label:
        type: string
#############
  Email:
    type: object
    required:
      - account_id
      - address
    properties:
      account_id:
        type: integer
      address:
        type: string
      verified:
        type: boolean
        format: int32
      verification_token:
        type: string
 #############
  MobileCarrier:
    type: object
    required:
      - code
      - label
    properties:
      code:
        type: string
      label:
        type: string
 #############
  MobilePhone:
    type: object
    required:
      - account_id
      - number
      - mobile_carrier_id
    properties:
      account_id:
        type: integer
      number:
        type: string
      country_code:
        type: string
      mobile_carrier_id:
        type: integer
      verified:
        type: boolean
        format: int32
      verification_token:
        type: string
 #############
  Room:
    type: object
    required:
      - code
      - building_id
      - room_number
    properties:
      code:
        type: string
      building_id:
        type: integer
      floor_number:
        type: integer
      floor_label:
        type: string
      room_number:
        type: integer
      room_label:
        type: string
#############
  State:
    type: object
    required:
      - country_id
      - code
      - label
    properties:
      country_id:
        type: integer
      code:
        type: string
      label:
        type: string
#############
  credentials:
    type: array
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
#############
  token:
    type: object
    properties:
      token:
        type: string
#############
  meta:
    type: object
    properties:
      pagination:
          type: object
          properties:
            total:
              type: integer
            count:
              type: integer
            per_page:
              type: integer
            current_page:
              type: integer
            total_pages:
              type: integer
            links:
              type: object
              properties:
                next:
                  type: string
                previous:
                  type: string
#############
  Authorization:
    type: array
    properties:
      Authorization:
        type: string
#############
  error:
    type: object
    properties:
      status_code:
        type: integer
      errors:
        type: array
      debug:
        type: string
      code:
        type: integer
      message:
        type: string